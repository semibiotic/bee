$RuOBSD: INSTALL,v 1.9 2005/08/01 00:11:00 shadow Exp $
Last Update 1.08.2005


                        СБОРКА ОСНОВНЫХ МОДУЛЕЙ

   Заберите и распакуйте исходный код (запакован с каталоге bee).

   Соберите библиотеки и основные модули. Для этого в каталоге bee скажите:

       make libs clean all install

                       ПОДГОТОВКА И ЗАПУСК ЯДРА

   Создайте необходимые файлы:

       mkdir /var/bee
       cd /var/bee
       touch account2.dat
       touch beelog.dat
       touch reslinks.dat
   
   Перейдите в каталог modules/scripts

   Проверьте правильность исполнительных скриптов (если вы не определились
   что они должны содержать - убедитесь что все строки закомментированы):
       beeapply.sh
       beepfrules.sh
       newlogin.sh
   
   установите скрипты командой
       make install   

   Попробуйте запустить ядро в консольном варианте (bee -c). Выход - 
   команда exit (другие команды см. COMMANDS)

   добавьте в /etc/rc.local запуск ядра демоном (с изначальной установкой
   разрешений):

       /usr/local/bin/bee -u -d


   ОБЯЗАТЕЛЬНО ЗАПРЕТИТЕ ДОСТУП К ПОРТУ 49160 со всех хостов кроме нужных
   т.к. в текущей версии нет аутентификации и ограничения доступа.


   Запустите демон (той же командой) или перезагрузите компьютер.

                     БPИФИНГ: РАБОТА СО СЧЕТАМИ

   Команды управления счетом
    >> просмотр счета(-ов) - acc
    >> добавить счет       - new
    >> удалить счет        - delete
    >> управление тегами   - freeze,unfreeze,on,off,unlimit,limit
    >> управление датами   - setstart,setstop
    >> начисление денег    - add
    >> коррекция счета     - _fix

   Комманды управления гейтами счета
    >> просмотр гейтов     - look
    >> добавление гейта    - addgate (или gate)
    >> удаление гейта      - delgate

                          РЕСУРС ADDER

   Все начисления на счет (командой add) начисляются от ресурса adder и
заносятся в лог транзакций. Поэтому каждый счет должен иметь гейт к ресурсу
adder. В качастве идента гейта adder рекомендуется использовать ник/логин
персоны (для упрощения поиска аккаунта). Это также необходимо для правильной
работы payman.

                      НАСТРОЙКА РЕСУРСА INET

   Предполагается версия OpenBSD 3.5 и выше, т.е. OpenBSD с файрволом PF с 
 поддержкой таблиц.

   Ресурс inet это трафик в/из Интернета.

   1. Установка утилиты коллектора трафика. bee может работать с двумя
      коллекторами трафика - cnupm или ipstatd.

      Коллектор собирает статистику по трафику на псевдоинтерфейсе
      pflog0 (на pflog0 попадает все что подпадает под правила с
      модификатором log)

      >> Установка cnupm (версии 3.6 и выше)
       Распакуйте исходный код, соберите и установите коллектор:

       make depend all install
       groupadd -g 666 cnupm
       useradd -u 666 -g 666 -d /var/cnupm -m -c 'Cnupm traffic collector' -s /sbin/nologin cnupm
       chmod 750 /var/cnupm

       В rc.local добавьте запуск демона сбора статистики:

       cnupm -i pflog0 -e

       При использовании cnupm шаблоном для скрипта счетчика beetraff.sh
     будет beetraff-cnupm.sh
       При снятии статистики с удаленной машины, на ней, кроме cnupm должен
     быть установлен скрипт bee-cnupmdump.sh

      >> Установка ipstatd
       Распакуйте исходный код ipstatd, соберите и установите его:

       make all install

       Добавьте запуск ipstatd в /etc/rc.local:

       ipstatd

       При использовании ipstatd шаблоном для скрипта счетчика beetraff.sh
     будет beetraff-ipstatd.sh

   2. Настройка файрвола, определение интерфейса

     Необходимо определиться с сетевым интерфейсом, на котором билинг будет
   управлять доступом и считать трафик. Так на шлюзе можно считать трафик как
   на "внешнем" интерфейсе, так и на "внутреннем".
     У меня трафик считается на внутреннем интерфейсе шлюза, возможно в вашем
   случае будет удобно считать перехватывать трафик на внешнем интерфейсе.

     Правила файрвола должны быть переписаны таким образом, чтобы запрещать
   весь трафик (кроме жизненно важного) через выбранный интерфейс. 
     Должна быть определена таблица (в дефолтных скриптах - hBeeAllowed),
   c модификатором persist (данные в таблицу будут загружаться динамически).
     Попавших в эту таблицу нужно пропустить правилами с модификатором log.

     Если вы хотите считать билингом трафик для серверов, пропущеных
   безусловно, добавьте лог в их правила.

     Ниже разрешающих правил можно добавить исключения - куда доступ будет
   разрешен вне зависимости от того есть ли у пользователя деньги на счете
   (например на веб-страницу состояния счета), правила пропускающие
   пользователей до бесплатных ресурсов не должны содержать модификатора log.

     ВНИМАНИЕ: правила с модификатором log не должны оказаться одновременно
   на входящем и исходящем интерфейсах, в этом случае весь трафик попадет
   на pflog0 дважды, и дважды же будет посчитан.

   3. Настройка счетов (и добавление гейтов)

     К счету должно быть привязан один или несколько гейтов inet, по одному на
   каждый хост/подсеть. Идент гейта inet должен включать IP-адрес хоста с
   маской подчети CIDR-нотации, например 192.168.12.2/32 (хост) или
   192.168.14.0/24 (подсеть класса C). Нельзя делать гейтов с одинаковыми
   адресами (во избежание генерации дублированных разрешений и других
   инциндентов)

   Допустим что сеть у вас такая:

   счет	    e-mail			 хост
   0        boss@pupkin.com	192.168.1.100
   1	    peter@pupkin.com	192.168.1.106
   2	    mary@pupkin.com	192.168.1.107
				192.168.1.108 (у Mary два компьютера)
   3        barbie@pupkin.com	192.168.1.30
   4	    ken@pupkin.com	192.168.1.31

   Сеанс регистрации (предполагается что счетов еще не заведено)

	# bee -c
        100 Billing ver 0.0.1.0
        100 loading resource links ...
        100 opening accounts ...
        100 opening log ...
        000 Ready
        human                  /* необязательная команда*/
        000 Mode set

 **** добавляем счета и гейты для ресурса adder ****

	new
	000 account 0 added
        gate adder 0 boss
        000 Success
	new
	000 account 1 added
        gate adder 1 peter
        000 Success
	new
	000 account 2 added
        gate adder 2 mary
        000 Success
	new
	000 account 3 added
        gate adder 3 barbie
        000 Success
	new
	000 account 4 added
        gate adder 4 ken
        000 Success

 **** проверяем (пока счетов мало можно просматривать все счета) ****
 **** позднее каждый счет придется смотреть отдельно             ****

        acc
        100 #0000  ----- (VALID)        +0.00  start -          stop -
        100 #0001  ----- (VALID)        +0.00  start -          stop -
        100 #0002  ----- (VALID)        +0.00  start -          stop -
        100 #0003  ----- (VALID)        +0.00  start -          stop -
        100 #0004  ----- (VALID)        +0.00  start -          stop -
        look *
        099 0   adder   boss
        099 1   adder   peter
        099 2   adder   mary
        099 3   adder   barbie
        099 4   adder   ken
        000 Success

 ****         добавляем гейты для ресурса inet          ****
 ****      предполается что мы помним номера счетов     ****
 ****  если это не так, вместо номера счета можно       ****
 ****  применять look-up форму аргумента                ****
 ****  т.е. gate inet adder name boss 192.168.1.100/32  ****
 ****  или  gate inet name boss 192.168.1.100/32        **** 

        gate inet 0 192.168.1.100/32
        000 Success
        gate inet 1 192.168.1.106/32
        000 Success
        gate inet 2 192.168.1.107/32
        000 Success
        gate inet 2 192.168.1.108/32
        000 Success
        gate inet 3 192.168.1.30/32
        000 Success
        gate inet 4 192.168.1.31/32
        000 Success

 **** проверяем (см. оговорку выше) ****

        look *
        099 0   adder   boss
        099 0   inet    192.168.1.100/32
        099 1   adder   peter
        099 1   inet    192.168.1.106/32
        099 2   adder   mary
        099 2   inet    192.168.1.107/32
        099 2   inet    192.168.1.108/32
        099 3   adder   barbie
        099 3   inet    192.168.1.30/32
        099 4   adder   ken
        099 4   inet    192.168.1.31/32
        000 Success
	exit
	100 Have a nice day
	#

   4. Настройка скрипта счетчика

    Переименуйте шаблон /usr/local/bin/beetraff-cnupm.sh или 
 /usr/local/bin/beetraff-ipstatd.sh (в зависимости от используемого коллектора
 трафика) в /usr/local/bin/beetraff.sh.

    Отредактируйте скрипт. Раскомментарьте нужную часть скрипта (Local). 
 Также Вам нужно добавить список исключений в ключах программы beetraff
 (приготовьтесь делать это несколько раз, в процессе  обкатки). Ключом -n
 указываются локальные адреса, ключом -N - исключения из них. beetraff
 исключает из подсчета трафик с локальных на локальные адреса.

    Проверьте работу скрипта, запустив его вручную, после чего пропишите
 его запуск в crontab (crontab -e), через каждые пять минут. 

   5. Настройка скрипта активации правил

    Раскомментарьте нужную часть скрипта /usr/local/bin/beeapply.sh

                  Файрвол на удаленной машине

beetraff.sh

  Раскомментарьте часть Remote (Local закомментарить), исправте значение
присваиваемое переменной REMOTE на [пользователь@]pupkin.com

beeapply.sh

  Раскоментарьте часть скрипта после комментария 
     "table version (no rule generatior used, remote)"
исправьте значение присваиваемое переменной REMOTE на [пользователь@]pupkin.com 

  Также, необходимо настроить беспарольную (шифровальным RSA/DSA ключом)
аутентификацию для ssh на удаленной машине (ssh(1), ssh-keygen(1)).

                     ПОЛЬЗОВАТЕЛЬСКИЙ ВЕБ-ИНТЕРФЕЙС

   см. site/INSTALL

  ВНИМАНИЕ: тщательно проверьте все необходимые моменты функционирования
билинга:
  >> что билинг пропускает вас (через PF) в инет
  >> правильно подсчитывает трафик (как входящий так и исходящий)
  >> правильно высчитывает сумму за трафик
  >> что билинг блокирует вас, когда у вас кончаются деньги
  >> что тем не менее позволяет смотреть состояние счета (если вы это
     используете) даже тогда когда у вас кончились деньги.

              КОРРЕКЦИЯ ПРОЦЕДУРЫ ВЫЧИСЛЕНИЯ СУММЫ INET

   см. также TARIFFS

   В файле src/bee/core/res.c найдите и исправьте таблицу тарифов.
по умолчанию она выглядит так:

inet_tariff_t  inet_tariffs[] =
{  { 0,  0,  3.0},  // default price
   { 2,  9,  1.8},  // night dead time
   {15, 19,  3.5},  // day rush hour
   {-1, -1, -1  }   // (terminator)
};   

что означает - базовая цена 3 руб/Мбайт, 1.80 с 2 до 9 часов
и 3.50 с 15 до 19 часов.

  Не забудьте пересобрать программу.



