$RuOBSD: COMMANDS,v 1.8 2005/07/02 23:45:46 shadow Exp $
Last Update 03.07.2005

                   Команды консоли билинга 
                (также смотрите ЛЕГЕНДУ нижe)

	exit		
Завершить сеанс консоли

	ver
(заглушка) Получить версию биллинга

	user	<username>
(не реализовано) Ввести имя пользователя. Первый шаг аутентификации
пользователеля. Это значит, что в перспективе билинг не будет пускать на
консоль всех и вся, и не будет позволять любому выполнять все команды для
всех счетов.

	pass	<password>
(не реализована) Ввести пароль пользователя. Второй шаг атентификации.

	acc	[<acc id>]
Просмотр состояния акаунта (по-умолчанию - всех аккаунтов)
Для человека состояние выводится в виде:
100 #0000  PUOFBD  (EMPTY)        +0.00  start -           stop -  
     ^^^^  ^^^^^^   ^^^^^         ^^^^^        ^^^              ^^^
    номер    \        \             \           \     Дата окончания действия 
              \        \             \            \___ Дата начала действия
               \        \             \___ Балланс аккаунта
                \        \___ Итог суммирования флагов
                 \___ Флаги аккаунта
                        Payman  - разрешить для payman-а
                        Unlimit - неограниченный доступ
                        Off     - отключен
                        Frozen  - заморожен
                        Broken  - поврежден
                        Deleted - удален

  Также, для счета выводится номер тарифного плана, если он не равен 0
(тарифный план по умолчанию).

для машины (программы) выводится пять десятичных чисел:
  001 <номер> <флаги> <балланс> <start> <stop> <tariff>
     Баланс выводится в виде с плавающей точкой
     start/stop выводится в виде UTC (количество секунд, с 1970 года)

 
	look	<acc id>
Вывод всех связанных с аккаунтом(-ами) ресурсных гейтов. Пока единственная
команда, работающая для нескольких попадающих в "acc id" аккаунтов.

	log	[<acc id>] [ <page> | all ]
Вывод выборки журнала операций для заданного аккаунта (по умолчанию - общий
журнал). 
  Операции выводятся в обратном порядке - последняя запись выводится первой.
Выводится только одна страница (20 записей) журнала. Можно указать номер
требуемой страницы (с конца) или "all" для вывода всего журнала :-O.

	freeze	<acc id>
Заморозить счет (блокировать счет и доступ к ресурсам, администратором).
Выполняется установкой тега FROZEN.

	unfreeze <acc id>
Разморозить счет. Выполняется снятием тега FROZEN.

	off	<acc id>
Запретить использование счета (блокировать счет и доступ, пользователем).
Средство доступное пользователю для предотвращения доступа к ресурсам со стороны
софта или, скажем, детей. При размещении данной команде на веб-странице рекомендуется
дополнительная проверка какого-нибудь пароля пользователя.
Выполняется установкой тега OFF. 

	on	<acc id>
Разрешить использование счета (и доступа, пользователем)

	unlimit	<acc id>
Установить на счет режим нелимитированного доступа. Доступ разрешается, отчислений
со счета не производится, журнал расхода ресурсов ведется.
Выполняется установкой флага UNLIMIT.

	limit	<acc id>
Выключить нелимитированный доступ для аккаунта.
Выполняется сбросом флага UNLIMIT.

	payman	<acc id>
Разрешить уравление аккаунтом через payman.
Выполняется установкой флага (тега) PAYMAN.

	nopayman	<acc id>
Запретить уравление аккаунтом через payman.
Выполняется сбросом флага (тега) PAYMAN.

	_break	<acc id>
Пометить аккаунт поврежденным (что кроме всего приведет к запрещению доступа)
Отладочная команда. Аккаунт считается поврежденным при несовпадении контрольной
суммы, установленном флаге BROKEN и несоответствии значений избыточных полей.
Устанавливает флаг BROKEN.

	_fix	<acc id> [<sum>]
Коррекция аккаунта - сброс флагов DELETED и BROKEN, коррекция баланса (если
указана сумма) восстановление избыточных полей и пересчет контрольной суммы
(последнее, впрочем производится всегда). Изменение баланса данной командой
не считается операцией и не заносится в журнал, почему эту команду не следует
использовать для начисления на счет (для этого существует команда add)

	_dump	<acc id>
(не реализовано) Дампировать состояние аккаунта (отладочная команда).
Дампирует запись аккаунта.

	_save	<acc id> <dump>
(не реализовано) Загрузить запись аккаунта из дампа (не регистрируется в
журнале).

	new	[<sum>]
Создать новый аккаунт и зачислить на него первую сумму (зачисление
регистрируется в журнале)

	delete <acc id>
Удалить аккаунт. Аккаунт помечается тегом DELETED (aka EMPTY). Физически
аккаунт равно как и его гейты не удаляются. Алиас del. Восстановить удаленный
аккаунт можно командой _fix.

	addgate <res indent> <acc id> <gate ident>
Создать гейт.

	delgate <res ident> <acc id> [<gate ident>]
Удалить подходящий по описанию гейт. Если имени не дано удаляется первый
подходящий гейт.

	add	<acc id> <sum>
Зачислить сумму на счет (регистрируется в журнале). Можно указать отрицательную
сумму.

	res <res ident> <gate ident> <value> <proto id> <host> [<user port>]
Зарегистрировать расход ресурса (команда для счетчиков ресурсов):
<res ident>  - ресурс
<gate ident> - идент гейта
<value>      - значение счетчика
<proto id>   - протокол, двойное слово конкретизирующее тип ресурса. Для
		ресурса inet это:
		* входящий/исходящий трафик
<host>	     - хост (возможны ресурсы не привязанные к хосту)
<user port>  - локальный порт (OBSOLETE)

	_hres <res ident> <gate ident> <value> <proto id> <host> [<price>] 
Хак команды res, для inet с фиксированной ценой <price> (вместо цены,
зависящей от текущего времени). Предполагаемое использование -
восстановление базы.

	update
Обновить разрешения на доступ к ресурсам. После любых изменений, способных
привести с запрещению или разрешению доступа, необходимо дать команду update.
Команда update не включает/выключает портов на свитчах сети (ресурс intra),
для их включения/выключения после команды update необходимо выполнить
intraupdate.
  Все консоли (и счетчики) могут работать одновременно. При этом гарантируется
целостность данных, но команда update, выполненная на любой консоли или
любой программой, приведет в к обновлению разрешений/запрещений, доступа,
на основании общих изменений данных, имеющихся на тот момент времени.

	human
Переключиться на режим человека (подавить машинный вывод)
Изначально выводятся сообщения и для человека и для машины.

	machine
Переключится в машинный режим (подавить человеческий вывод)

	date
Вывести текущие дату/время

	report	<acc id> [from <time>] [to <time>] [step <hours>] [<flags>]
Сгенерировать отчет об операциях над указанным счетом за указанный период,
(по умолчанию с минимального времени и/или по текущее время) с выбранной
детализацией (по умолчанию - суммарно).
<flags> служат для дополнительной детализации (в данный момент флагов не
реализовано)

       allow <res ident> <acc id> [<gate ident>]
(не реализовано) Разрешить использование гейта(-ов).

       disallow <res ident> <acc id> [<gate ident>]
(не реализовано) Запретить использование гейта(-ов)

       setstart <acc id> <date> | null
Установить дату начала действия аккаунта. Специальное значение null,
предназначено для анулирования поля. 

       setstop <acc id> <date> | null
Установить дату окончания действия аккаунта. Специальное значение null,
предназначено для анулирования поля.

M      new_contract <username>
(макрокоманда) Инициализация аккаунтов нового контракта. Создает два аккаунта 
(интернет и интранет), прописывает для них ресурсы adder. Возвращает номера
двух созданных счетов в виде
100 Inet account: 74      {комментарий - игнорировать}
001 74                    {номер первого аккаунта (интернет)}
100 Intra account: 75     {комментарий - игнорировать}
001 75                    {номер второго аккаунта (интранет)}
000 Success		  {признак успешности (текст игнорировать)}

M      new_name <name>@<host> <inet_acc> <intra_acc>
(макрокоманда) Инициализация почтового имени. Создает почтовый аккаунт на
указанном хосте (разрешен только home.oganer.net), запуская на этом хосте
скрипт (требуется нстроить для ssh авторизацию RSA-ключом для этого хоста).
Создает гейт на почтовый ящик для инет-аккаунта.

M      intraupdate
(макрокоманда) Команда обновления разрешений/запрещений доступа для ресурса
intra (команда update не управляет портами свитчей, а только создает списки
портов, подлежащих включению и отключению). Через скрипт включает и выключает
порты попадающие в allowed.intra и disallowed.intra, при выполнении команды
update. Для правильной работы команде intraupdate должна предшествовать
команда update.

M      new_vpn <username> <ip-address/mask> [<initial sum>]
(макрокоманда) Команда создает новый аккаунт с гейтами adder и inet (c именем
и адресом соответственно) и начисляет сумму (без записи в лог) если она
определена.
На новом счете также устанавилвается флаг (тег) PAYMAN.
 
       lock
Команда блокирует общий доступ к таблице аккаунтов и таблице лога, а также
разрешает асинхронную работу с ними. Предполагалось что это ускорит работу.
ВНИМИНИЕ: использовать только тогда, когда это действительно надо (т.к. 
это команда блокирует доступ из других инстанций bee и libbeedb-утилит).

       unlock
Команда синхронизирует таблицы и снимает блокировку (см. lock).

+      _tariff <acc id> <number>
Команда устанавливает для заданного аккаунта новый номер тарифного плана.
По умолчанию, это номер равен 0.

                               ЛЕГЕНДА

<acc id> =	
        {*} | 
	{<account number>} |
	{<res ident> {name <gate ident>}|{gate id} } |
	{name <gate ident>} |
	{addr <gate ident>}

(В конечном счете идентифицируют аккаунт(ы))
Первая форма - выбор всех (для команд с работающих с несколькими счетами)
	или первого аккаунта.
Вторая форма - прямое указание номера аккаунта
Третья форма - идент ресурса + целый ид гейта или строковый идент гейта,
	с модификатором "name"
Четвертая и пятая формы - определяют идент гейта, для любого ресурса,
	с модификатором name совпадением считается строгое равенство
	строк, с модификатором addr строки сравниваются как IP-адреса.

<time> =
	{ +|- <hour>:<min>} |
	{ [<date>/<mouth>[/<year>]] <hour>:<min>}

(Определяет дату/время)
Первая форма определяет смещение относительно текущего времени.
Вторая форма определяет дату/время. Если дата или год опущены используются
	текушие значения.
